spring:
  security:
    oauth2:
      client:
        registration:
          cc-management-service:
            client-id: "cc-management-service"
            client-secret: ${vcap.services.cc-management-service-keycloak-client.credentials.client-secret}
            authorization-grant-type: "client_credentials"
            provider: "default-provider"
            scope: "openid"
        provider:
          default-provider:
            issuer-uri: "https://identity.bit.admin.ch/realms/BAG-CovidCertificate"
  datasource:
    url: jdbc:postgresql://${vcap.services.cc_management_db_prod.credentials.hostname}:${vcap.services.cc_management_db_prod.credentials.port}/${vcap.services.cc_management_db_prod.credentials.name}
    username: ${vcap.services.cc_management_db_prod.credentials.username}
    password: ${vcap.services.cc_management_db_prod.credentials.password}

jeap:
  security:
    oauth2:
      resourceserver:
        authorization-server:
          issuer: "https://identity.bit.admin.ch/realms/BAG-CovidCertificate"

cc-management-service:
  cose:
    key-identifier: "2E5DCD3F4DF33B16"
  jwt:
    issuer: "https://covidcertificate-management.bag.admin.ch"
    token-validity: 43200000
    privateKey: ${vcap.services.cc_jwt_signing_key.credentials.privateKey}
  cache-duration: 21600000

  monitor:
    prometheus:
      user: "prometheus"
      password: ${vcap.services.cc_prometheus.credentials.password}
  pdf:
    show-watermark: false

  allowed-origin: "https://www.covidcertificate.admin.ch"

  truststore:
    password: ${vcap.services.cc_trust_store.credentials.password}

  cleanup:
    # <seconds> <minutes> <hours> <day-of-month> <month> <day-of-week>
    cron: "0 00 0 * * *" ## At 00:00 AM
    spots:
      management-db:
        database:
          url: jdbc:postgresql://${vcap.services.cc_management_db_prod.credentials.hostname}:${vcap.services.cc_management_db_prod.credentials.port}/${vcap.services.cc_management_db_prod.credentials.name}
          username: ${vcap.services.cc_management_db_prod.credentials.username}
          password: ${vcap.services.cc_management_db_prod.credentials.password}
      api-gateway-db:
        database:
          url: jdbc:postgresql://${vcap.services.cc_apigateway_db_prod.credentials.hostname}:${vcap.services.cc_apigateway_db_prod.credentials.port}/${vcap.services.cc_apigateway_db_prod.credentials.name}
          username: ${vcap.services.cc_apigateway_db_prod.credentials.username}
          password: ${vcap.services.cc_apigateway_db_prod.credentials.password}
      lightcer-generation-db:
        database:
          url: jdbc:postgresql://${vcap.services.cc_lightcer_generation_db_prod.credentials.hostname}:${vcap.services.cc_lightcer_generation_db_prod.credentials.port}/${vcap.services.cc_lightcer_generation_db_prod.credentials.name}
          username: ${vcap.services.cc_lightcer_generation_db_prod.credentials.username}
          password: ${vcap.services.cc_lightcer_generation_db_prod.credentials.password}
      printing-db:
        database:
          url: jdbc:postgresql://${vcap.services.cc_printing_db_prod.credentials.hostname}:${vcap.services.cc_printing_db_prod.credentials.port}/${vcap.services.cc_printing_db_prod.credentials.name}
          username: ${vcap.services.cc_printing_db_prod.credentials.username}
          password: ${vcap.services.cc_printing_db_prod.credentials.password}

cc-signing-service:
  url: "https://covidcertificate-signing.bag.admin.ch/bag-vaccinecer-webapp/sign"
  verify-url: "https://covidcertificate-signing.bag.admin.ch/bag-vaccinecer-webapp/sign/verify"
  kid-url: "https://covidcertificate-signing.bag.admin.ch/bag-vaccinecer-webapp/sign/configuration/kid"
  ping-url: "https://covidcertificate-signing.bag.admin.ch/bag-vaccinecer-webapp/ping"
  health-url: "https://covidcertificate-signing.bag.admin.ch/bag-vaccinecer-webapp/actuator/health"
  info-url: "https://covidcertificate-signing.bag.admin.ch/bag-vaccinecer-webapp/actuator/info"

cc-printing-service:
  url: "https://cc-printing-service.app.cfap02.atlantica.admin.ch/api/v1/print"

cc-inapp-delivery-service:
  url: "https://ch-covidcertificate-backend-delivery-ws.app.cfap02.atlantica.admin.ch/cgs/delivery/v1/covidcert"

ch-covidcertificate-backend-verifier-service:
  url: "https://ch-covidcertificate-backend-verifier-ws.app.cfap02.atlantica.admin.ch/dcga/v1/valueSets"

## Mutual-SSL configuration to connect from management-service to signing-service
app:
  conn:
    cc-signing-service:
      key-store: ${vcap.services.cc_signing_service_keystore.credentials.keystore}
      key-store-password: ${vcap.services.cc_signing_service_keystore.credentials.keystorePassword}
      key-alias: cc-management-service
      key-password: ${vcap.services.cc_signing_service_keystore.credentials.keyPassword}
      trust-store: ${vcap.services.cc_signing_service_keystore.credentials.keystore}
      trust-store-password: ${vcap.services.cc_signing_service_keystore.credentials.keystorePassword}
